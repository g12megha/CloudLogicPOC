'use strict';

var loginProvider = require('./login-provider.js');
var checkRequest = require('../utils/check-request.js');
var xhr = require('../xhr-login/xhr');
var sessionExt = require('../utils/session-ext');

module.exports = function loginCheck(req, res, next) {
  var routerConfig = req.app.get('routerConfig');
  if (!loginProvider.isLoginRequired(req, routerConfig)) {
    return next();
  }

  if (checkRequest.isAjaxRequest(req)) {
    return processAjaxCall(req, res);
  }

  sessionExt.update(req.session, function(session) {
    session.locationAfterLogin = req.url;
  });

  try {
    var authenticator = loginProvider.getAuthenticator(req, routerConfig);
    authenticator(req, res, next);
  } catch (err) {
    if (err === 401) {
      res.setHeader('WWW-Authenticate', 'Basic realm="' + xhr.getRealm() + '"');
      res.writeHead(401);
      res.end('Authentication required');
    } else {
      var logger = req.loggingContext.getLogger('/Handler');
      logger.error(err);
      res.writeHead(500);
      res.end(err.message);
    }
  }
};

function processAjaxCall(req, res) {
  if (xhr.isXhrLoginRequest(req)) {
    xhr.sendLogonChallenge(res);
  } else {
    res.writeHead(401);
    res.end('Authentication required');
  }
}
