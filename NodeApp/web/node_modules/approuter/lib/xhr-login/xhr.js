'use strict';

var fs = require('fs');
var http = require('http');
var path = require('path');
var querystring = require('querystring');
var util = require('util');
var vcapUtils = require('../utils/vcap-utils');

var HTML;

function getRealm() {
  var appEnv = vcapUtils.getAppEnv();
  var uris = appEnv.uris;
  var uri = (uris && uris.length > 0) ? uris[0] : '';

  var name = appEnv.application_name || appEnv.name;

  return util.format('%s at %s', name, uri);
}

function send(res, statusObject) {
  var html = util.format(getHtml(), JSON.stringify(statusObject));

  res.writeHead(200, {
    'Cache-Control': 'no-cache, no-store',
    'Content-Type': 'text/html; charset=utf-8'
  });
  res.end(html);
}

function getHtml() {
  if (!HTML) {
    var filePath = path.resolve(__dirname, 'iframe-response.html');
    HTML = fs.readFileSync(filePath, 'utf8');
  }

  return HTML;
}

function createSuccessObject() {
  return {
    xhrLogon: {
      type: 'iframe',
      realm: getRealm(),
      status: 200
    }
  };
}

function createErrorObject(err) {
  var statusObject = {
    xhrLogon : {
      type : 'iframe',
      realm : getRealm(),
      status : err.status || 401,
      lang : 'en-US',
      message: err.toString()
    }
  };

  return statusObject;
}

exports.isXhrLoginRequest = function (req) {
  return req.headers['x-xhr-logon'] !== undefined;
};

exports.sendLogonChallenge = function(res) {
  var xhrLogonHeader = 'accept="iframe",realm="%s",frameEnable="xhr-logon-activate"';

  res.setHeader('Cache-Control', 'no-cache, no-store');
  res.setHeader('X-XHR-Logon', util.format(xhrLogonHeader, getRealm()));
  res.writeHead(403);
  res.end(http.STATUS_CODES[403]);
};

exports.isXhrLogin = function(req) {
  return req.internalUrl && !!querystring.parse(req.internalUrl.query)['xhr-logon'];
};

exports.sendLoginSuccessHtml = function(res) {
  send(res, createSuccessObject());
};

exports.sendLoginErrorHtml = function(res, err) {
  send(res, createErrorObject(err));
};

exports.getRealm = getRealm;
